#!/usr/bin/env bash
#
# Require bash version >= 4.4

set -euo pipefail

debug() { printf "\\033[1;30m[DEBUG] %s\\033[0m\\n" "$*"; }
err() {
  local -ir exit_status="$1"
  shift
  printf "\\033[1;31m[ERROR] %s\\033[0m\\n" "$*" >&2
  exit "$exit_status"
}

vergte() { printf '%s\n%s' "$1" "$2" | sort -rCV; }
if ! vergte "${BASH_VERSION%%[^0-9.]*}" "4.4"; then
  err 1 "Require bash version >= 4.4"
fi

# https://stackoverflow.com/a/51548669
shopt -s expand_aliases
alias trace_on="{ echo; set -x; } 2>/dev/null"
alias trace_off="{ set +x; } 2>/dev/null"
export PS4='# ${BASH_SOURCE:-"$0"}:${LINENO} - ${FUNCNAME[0]:+${FUNCNAME[0]}()} > '

usage() {
  cat <<EOF
Usage: $0 [OPTIONS] CEPHADM_ARGS

Options:
  --hosts HOST_FILE, --hosts=HOST_FILE
                             hosts file (each line "[user@]host[:port]")
  --host HOST_STRING, --host=HOST_STRING
                             additional host entries ("[user@]host[:port]")

Running the script without specifying hosts will only perform local execution.
EOF
}

if (( $# == 0 )); then
  usage
  exit
fi


HOST_PARAMS=()
CEPHADM_PARAMS=()

# loop positional params: https://unix.stackexchange.com/a/314041
for (( idx = 1; idx <= $#; idx++ )); do
  if [[ "${!idx}" == @(--hosts|--host) ]]; then
    HOST_PARAMS+=("${!idx}")
    (( idx++ ))
    if [[ -z "${!idx:-}" ]]; then
      usage
      exit 2
    fi
    HOST_PARAMS+=("${!idx}")
    continue
  fi

  if [[ "${!idx}" =~ ^(--hosts=|--host=) ]]; then
    HOST_PARAMS+=("${!idx}")
    continue
  fi

  CEPHADM_PARAMS+=("${!idx}")
done

print_arr() {
  local -nr arr=$1
  local joined
  # "@Q" quote each parameter: https://lwn.net/Articles/701009/
  printf -v joined '%s, ' "${arr[@]@Q}"
  debug "$1:" "[${joined%, }]"
}
print_arr HOST_PARAMS
print_arr CEPHADM_PARAMS

if (( "${#HOST_PARAMS[@]}" )); then
  if ! command -v "parallel-ssh" >/dev/null 2>&1; then
    err 3 "Please install parallel-ssh"
  fi
fi

readonly DEFAULT_BIN_DIR="$PWD"/cephadm_target/bin
: "${CEPHADM:="$DEFAULT_BIN_DIR"/cephadm}"
if ! [[ -x "$CEPHADM" ]]; then
  debug "download cephadm"
  trace_on
  (
    mkdir -p "$DEFAULT_BIN_DIR" \
      && cd "$DEFAULT_BIN_DIR" \
      && curl --silent --remote-name --location https://github.com/ceph/ceph/raw/octopus/src/cephadm/cephadm \
      && chmod +x cephadm
  )
  trace_off
fi

if (( "${#HOST_PARAMS[@]}" )); then
  trace_on
  parallel-ssh \
    -O StrictHostKeyChecking=no \
    -O UserKnownHostsFile=/dev/null \
    -O GlobalKnownHostsFile=/dev/null \
    -O LogLevel=ERROR \
    --par=8 \
    --inline \
    --send-input \
    --print \
    "${HOST_PARAMS[@]}" \
    "sudo python3 -u - ${CEPHADM_PARAMS[*]}" < "${CEPHADM}"
  trace_off
else
  trace_on
  sudo "$CEPHADM" "${CEPHADM_PARAMS[@]}"
  trace_off
fi
