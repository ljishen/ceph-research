#!/usr/bin/env bash
#
# Require bash version >= 4.4
#
# This script depends on passwordless ssh and passwordless sudo via
# the current user ($USER) on remote hosts.

set -euo pipefail

readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
# shellcheck source=./common.sh
. "$SCRIPT_DIR/common.sh"


usage() {
  cat <<EOF
Usage: $0 [OPTIONS] CEPHADM_ARGS

Options:
  --hosts HOST_FILE, --hosts=HOST_FILE
                             hosts file (each line "[user@]host[:port]")
  --host HOST_STRING, --host=HOST_STRING
                             additional host entries ("[user@]host[:port]")

Running the script without specifying hosts will only perform local execution.
EOF
}

if (( $# == 0 )); then
  usage
  exit
fi


HOST_PARAMS=()
CEPHADM_PARAMS=()
handle_add_cmdline_param() {
  CEPHADM_PARAMS+=("$1")
}
common::parse_cmdline_params HOST_PARAMS "$@"
common::debug HOST_PARAMS: "$(common::print_array HOST_PARAMS)"
common::debug CEPHADM_PARAMS: "$(common::print_array CEPHADM_PARAMS)"

readonly USER_SBIN_DIR="$DEPLOYMENT_DATA_ROOT"/usr/sbin
: "${CEPHADM:="$USER_SBIN_DIR"/cephadm}"
if ! [[ -x "$CEPHADM" ]]; then
  common::debug "download cephadm"
  trace_on
  (
    mkdir -p "$USER_SBIN_DIR" \
      && cd "$USER_SBIN_DIR" \
      && curl --silent --remote-name --location https://github.com/ceph/ceph/raw/pacific/src/cephadm/cephadm \
      && chmod +x cephadm
  )
  trace_off
fi

if (( "${#HOST_PARAMS[@]}" )); then
  trace_on
  "$SCRIPT_DIR"/parallel-ssh \
    "${HOST_PARAMS[@]}" \
    "sudo python3 -u - ${CEPHADM_PARAMS[*]}" <"${CEPHADM}"
  trace_off
else
  trace_on
  sudo "$CEPHADM" "${CEPHADM_PARAMS[@]}"
  trace_off
fi
