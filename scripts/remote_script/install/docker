#!/usr/bin/env bash
#
# Require bash version >= 4.4
#
# The installation process is following the docker docs:
#   https://docs.docker.com/engine/install/

#include include/common.sh
#include include/util.sh

common::info "Checking/Installing docker"
(( INFO_LEVEL += 1 ))

SYS_DISTRO="$(util::get_supported_distro)"

DOCKER_CLIENT_VERSION="$(
  docker version --format '{{ .Client.Version }}' 2>/dev/null \
    | sed 's/[^0-9.]*//g' || true
)"
DOCKER_SERVER_VERSION="$(
  docker version --format '{{ .Server.Version }}' 2>/dev/null \
    | sed 's/[^0-9.]*//g' || true
)"

if [[ -n "$DOCKER_CLIENT_VERSION" ]] \
  && [[ -n "$DOCKER_SERVER_VERSION" ]]; then
  common::info "Existing version of docker:" \
    "$DOCKER_CLIENT_VERSION (client)," \
    "$DOCKER_SERVER_VERSION (server)"

  if common::vergte "$DOCKER_CLIENT_VERSION" "19.03.8" \
    && common::vergte "$DOCKER_SERVER_VERSION" "19.03.8"; then
    common::info "System has installed the satisfied version of docker." $'\n'
    exit
  fi
fi


# This is to avoid the error:
#   debconf: unable to initialize frontend: XXXX
export DEBIAN_FRONTEND=noninteractive

common::info "Uninstall old versions of Docker..."
trace_on
apt-get --yes purge \
  docker docker-engine docker.io containerd runc >/dev/null 2>&1 || true
trace_off

common::info "Set up Docker's repository..."
trace_on
apt-get update >/dev/null
apt-get --yes --no-install-recommends install \
  ca-certificates \
  curl \
  gnupg \
  lsb-release >/dev/null

curl -fsSL https://download.docker.com/linux/"$SYS_DISTRO"/gpg \
  | gpg --dearmor --batch --no-tty --yes \
    --output /usr/share/keyrings/docker-archive-keyring.gpg

cat <<EOF | tee /etc/apt/sources.list.d/docker.list >/dev/null
deb [arch=$(dpkg --print-architecture) \
signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
https://download.docker.com/linux/$SYS_DISTRO $(lsb_release -cs) stable
EOF
trace_off

common::info "Install docker engine..."
trace_on
apt-get update >/dev/null
apt-get --yes --no-install-recommends install \
  docker-ce docker-ce-cli containerd.io >/dev/null \
  || {
    EXIT_STATUS=$?
    sleep 20
    systemctl status docker || true
    exit $EXIT_STATUS
  }
trace_off


common::info "Add your user (${EFFECTIVE_USER:-$USER}) to the docker group..."
trace_on
groupadd --force docker
usermod -aG docker "${EFFECTIVE_USER:-$USER}"
trace_off

if [[ -d "$HOME/.docker" ]]; then
  common::info "Fix possible permission error..."
  trace_on
  chown "$(id --user --name)":"$(id --group --name)" "$HOME/.docker" -R
  chmod g+rwx "$HOME/.docker" -R
  trace_off
fi

common::info "Successfully installed/upgraded docker." $'\n'

# executing this command will replace the current shell and
# lose our defined functions. So I put it at the end.
newgrp docker
