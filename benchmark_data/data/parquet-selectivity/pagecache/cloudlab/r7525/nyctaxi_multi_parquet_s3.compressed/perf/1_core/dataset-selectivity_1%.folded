conbench;[[kernel.kallsyms]] 1
conbench;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 4
conbench;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;[anon];posix_madvise;[[kernel.kallsyms]] 1
conbench;[unknown];[python3.8];_PyFunction_Vectorcall;_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;[python3.8];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;[python3.8];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;PyObject_Call;[python3.8];_PyFunction_Vectorcall;_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;[python3.8];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;[python3.8];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;[python3.8];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;PyObject_Call;_PyFunction_Vectorcall;_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;[python3.8];[python3.8];[python3.8];__libc_connect;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];nf_nat_ipv4_local_fn 1
conbench;[unknown];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyObject_MakeTpCall;PyCFunction_Call;__pyx_pw_7pyarrow_8_dataset_7Dataset_14to_table;__Pyx_PyObject_CallNoArg;__pyx_pw_7pyarrow_8_dataset_7Scanner_16to_table;arrow::dataset::SyncScanner::ToTable;arrow::internal::RunSynchronously<std::shared_ptr<arrow::Table> >;arrow::dataset::SyncScanner::ToTableInternal;arrow::Table::FromRecordBatches;arrow::Schema::Equals;arrow::detail::Fingerprintable::fingerprint;arrow::Schema::ComputeFingerprint;std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str;std::string::_M_replace_safe;std::string::_M_mutate;std::string::_Rep::_S_create;operator new;__GI___libc_malloc;tcache_get 1
conbench;[unknown];_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalFrameDefault;_PyFunction_Vectorcall;_PyEval_EvalCodeWithName;_PyEval_EvalFrameDefault;_PyObject_MakeTpCall;PyCFunction_Call;__pyx_pw_7pyarrow_8_dataset_7Dataset_14to_table;__Pyx_PyObject_CallNoArg;__pyx_pw_7pyarrow_8_dataset_7Scanner_16to_table;arrow::dataset::SyncScanner::ToTable;arrow::internal::RunSynchronously<std::shared_ptr<arrow::Table> >;arrow::dataset::SyncScanner::ToTableInternal;arrow::Table::FromRecordBatches;arrow::SimpleRecordBatch::column;arrow::MakeArray;operator new;__GI___libc_malloc;_int_malloc 1
conbench;[unknown];arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::ArrayBuilder::Reserve;arrow::BaseBinaryBuilder<arrow::BinaryType>::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;je_arrow_private_je_large_ralloc_no_move;large_ralloc_no_move_expand;je_arrow_private_je_extent_alloc_wrapper;extent_alloc_retained;malloc_mutex_lock;malloc_mutex_trylock_final;__GI___pthread_mutex_trylock 1
conbench;[unknown];arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::ArrayBuilder::Reserve;arrow::BaseBinaryBuilder<arrow::BinaryType>::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;__memmove_avx_unaligned_erms 2
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull 49
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append 137
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;__memcpy_avx_unaligned 8
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;__memmove_avx_unaligned_erms 14
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::ArrayBuilder::length 18
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BaseBinaryBuilder<arrow::BinaryType>::Resize;arrow::ArrayBuilder::Resize;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BaseBinaryBuilder<arrow::BinaryType>::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;__memmove_avx_unaligned_erms 6
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BaseBinaryBuilder<arrow::BinaryType>::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;large_ralloc_move_helper;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_extract;extents_fit_locked;extents_first_fit_locked;je_arrow_private_je_extent_heap_first 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;__memmove_avx_unaligned_erms 2
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;isdalloct;arena_sdalloc;arena_dalloc_large;je_arrow_private_je_large_dalloc;large_dalloc_finish_impl;je_arrow_private_je_arena_extents_dirty_dalloc;extent_record;extent_try_coalesce_large;extent_try_coalesce_impl;extent_coalesce;extent_activate_locked;extents_remove_locked;extent_size_quantize_floor 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;isdalloct;arena_sdalloc;arena_dalloc_large;je_arrow_private_je_large_dalloc;large_dalloc_prep_impl 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;je_arrow_private_je_large_ralloc_no_move;large_ralloc_no_move_expand 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append@plt 6
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int> 6
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int>;arrow::BitUtil::BitReader::GetBatch<int> 5
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32 1
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2 2
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2;arrow::internal::(anonymous namespace)::UnpackBits256< 2
conbench;[unknown];parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDenseNonNull;arrow::util::RleDecoder::GetBatch<int>;arrow::util::RleDecoder::NextCounts<int> 4
conbench;[unknown];start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::PrepareOutput;arrow::compute::(anonymous namespace)::AllocateDataBuffer;arrow::compute::KernelContext::Allocate;arrow::AllocateResizableBuffer;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Allocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_split;extent_split_interior;extent_split_impl;extent_rtree_leaf_elms_lookup;extent_base_get 1
conbench;[unknown];std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::BufferBuilder::Resize;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;arena_ralloc_move_helper;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_arena_palloc;arena_malloc;tcache_alloc_small;je_arrow_private_je_tcache_alloc_small_hard;je_arrow_private_je_arena_tcache_fill_small 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::Function::DispatchBest;arrow::compute::CastFunction::DispatchExact;arrow::compute::KernelSignature::MatchesInputs 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::Function::DispatchBest;arrow::compute::CastFunction::DispatchExact;arrow::compute::KernelSignature::MatchesInputs;arrow::TypeEquals 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferZeroCopy;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;std::_Sp_counted_base< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;std::_Sp_counted_base<;arrow::SimpleTable::~SimpleTable 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader 4
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::arrow::ReaderContext, std::allocator<parquet::arrow::ReaderContext>, ;std::_Sp_counted_ptr<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >*,  1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;std::_Sp_counted_base<;parquet::DataPageV1::~DataPageV1 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType< 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::PoolBuffer::~PoolBuffer 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::PoolBuffer::~PoolBuffer;_int_free;free_perturb 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::PoolBuffer::~PoolBuffer;std::_Sp_counted_ptr<arrow::CPUMemoryManager*,  1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::RangeIterator::~RangeIterator;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >, std::allocator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >, ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::~RowGroupRecordBatchReader;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Delete<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Delete<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::~LeafReader;std::_Sp_counted_ptr_inplace<parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::~SerializedPageReader;arrow::io::BufferReader::~BufferReader;std::_Sp_counted_base<;arrow::PoolBuffer::~PoolBuffer;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Free;je_arrow_dallocx;ifree;idalloctm;arena_dalloc;arena_dalloc_large;je_arrow_private_je_large_dalloc;large_dalloc_finish_impl;je_arrow_private_je_arena_extents_dirty_dalloc;extent_record;extent_try_coalesce_large;extent_try_coalesce_impl;extent_coalesce;extent_merge_impl;je_arrow_private_je_extent_dalloc;je_arrow_private_je_extent_avail_insert 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::Datum::descr 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::ExecBatchIterator::Make 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::ExecBatchIterator::Next;arrow::ArrayData::Slice;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::Cast;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::CastMetaFunction::ExecuteImpl;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::TrivialScalarUnaryAsArraysExec;arrow::compute::internal::(anonymous namespace)::BinaryToBinaryCastExec<arrow::StringType, arrow::BinaryType>;arrow::internal::VisitBitBlocks<arrow::internal::ArrayDataInlineVisitor<arrow::BinaryType, void>::VisitStatus<arrow::ArrayDataVisitor<arrow::BinaryType>::Visit<arrow::compute::internal::(anonymous namespace)::Utf8Validator> 92
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;arrow::compute::ExecContext::ExecContext;arrow::compute::GetFunctionRegistry 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferBinary;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::GetBuilderChunks;arrow::ArrayBuilder::Finish;arrow::MakeArray;operator new 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferInt<arrow::Int8Type, parquet::PhysicalType<;arrow::AllocateBuffer;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Allocate;je_arrow_mallocx;imalloc;tsd_fetch;tsd_fetch_impl;tsd_state_get;__tls_get_addr 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferZeroCopy;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferZeroCopy;operator new;__GI___libc_malloc;tcache_get 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferZeroCopy;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType< 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::arrow::TransferColumnData;parquet::arrow::(anonymous namespace)::TransferZeroCopy;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::AllocateBuffer;std::__shared_count<;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType< 3
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;__memset_avx2_unaligned_erms 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_arena_palloc;arena_malloc;tcache_alloc_small;je_arrow_private_je_tcache_alloc_small_hard;je_arrow_private_je_arena_tcache_fill_small;arena_bin_malloc_hard;arena_bin_nonfull_slab_get;malloc_mutex_unlock;pthread_mutex_unlock 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;arena_large_malloc_stats_update;arena_stats_add_u64;atomic_fetch_add_u64 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extent_alloc_wrapper;extent_alloc_retained;extent_recycle;extent_recycle_extract;extents_fit_locked;extents_first_fit_locked;je_arrow_private_je_extent_heap_first 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_extract;extent_activate_locked;extents_remove_locked;je_arrow_private_je_extent_heap_remove 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;__dynamic_cast;__cxxabiv1::__vmi_class_type_info::__do_dyncast 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;__dynamic_cast;__cxxabiv1::__vmi_class_type_info::__do_dyncast;__cxxabiv1::__vmi_class_type_info::__do_dyncast;__cxxabiv1::__vmi_class_type_info::__do_dyncast;__cxxabiv1::__class_type_info::__do_dyncast 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;arrow::io::BufferReader::DoRead;arrow::io::BufferReader::DoReadAt;arrow::internal::MemoryAdviseWillNeed;posix_madvise;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;arrow::io::InputStream::Advance;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::BufferReader>::Read;arrow::io::BufferReader::DoRead;arrow::io::BufferReader::DoReadAt;arrow::internal::MemoryAdviseWillNeed;posix_madvise;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;arrow::io::InputStream::Advance;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::BufferReader>::Read;arrow::io::BufferReader::DoRead;arrow::io::BufferReader::DoReadAt;arrow::internal::MemoryAdviseWillNeed;posix_madvise;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;arrow::io::InputStream::Advance;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::BufferReader>::Read;arrow::io::BufferReader::DoRead;arrow::io::BufferReader::DoReadAt;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;arrow::io::InputStream::Advance;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::BufferReader>::Read;arrow::io::BufferReader::DoRead;arrow::io::BufferReader::DoReadAt;operator new;__GI___libc_malloc;tcache_get 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;operator new;__GI___libc_malloc;tcache_get 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_split;extent_split_interior;extent_split_impl;je_arrow_private_je_extent_alloc;je_arrow_private_je_extent_avail_remove 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;arena_ralloc_move_helper;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_split;extent_split_interior;extent_split_impl;je_arrow_private_je_extent_alloc;je_arrow_private_je_extent_avail_remove 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_rallocx;iralloct;je_arrow_private_je_arena_ralloc;je_arrow_private_je_large_ralloc;__memmove_avx_unaligned_erms 4
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::util::internal::(anonymous namespace)::SnappyCodec::Decompress;snappy::RawUncompress;snappy::RawUncompress 142
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::util::internal::(anonymous namespace)::SnappyCodec::Decompress;snappy::RawUncompress;snappy::RawUncompress;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::util::internal::(anonymous namespace)::SnappyCodec::Decompress;snappy::RawUncompress;snappy::RawUncompress;__memmove_avx_unaligned_erms 14
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::util::internal::(anonymous namespace)::SnappyCodec::Decompress;snappy::RawUncompress;snappy::RawUncompress;__memmove_avx_unaligned_erms;[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::(anonymous namespace)::SerializedPageReader::DecompressIfNeeded;arrow::util::internal::(anonymous namespace)::SnappyCodec::Decompress;snappy::RawUncompress;snappy::RawUncompress;__memmove_avx_unaligned_erms;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;apache::thrift::protocol::TVirtualProtocol<apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>, apache::thrift::protocol::TProtocolDefaults>::readFieldBegin_virt 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;apache::thrift::protocol::TVirtualProtocol<apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>, apache::thrift::protocol::TProtocolDefaults>::readStructBegin_virt;std::string::_M_replace_safe 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;parquet::format::DataPageHeader::read;apache::thrift::protocol::TVirtualProtocol<apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>, apache::thrift::protocol::TProtocolDefaults>::readFieldBegin_virt 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;parquet::format::DataPageHeader::read;parquet::format::Statistics::read;apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>::readBinary;std::string::_M_replace_safe;std::string::_M_mutate;std::string::_Rep::_S_create;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;parquet::format::DataPageHeader::read;parquet::format::Statistics::read;apache::thrift::protocol::TVirtualProtocol<apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>, apache::thrift::protocol::TProtocolDefaults>::readFieldEnd_virt 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;parquet::format::PageHeader::read;parquet::format::DataPageHeader::read;parquet::format::Statistics::read;apache::thrift::protocol::TVirtualProtocol<apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>, apache::thrift::protocol::TProtocolDefaults>::readStructBegin_virt 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::(anonymous namespace)::SerializedPageReader::NextPage;parquet::DeserializeThriftMsg<parquet::format::PageHeader>;std::_Sp_counted_base<;apache::thrift::protocol::TCompactProtocolT<apache::thrift::transport::TMemoryBuffer>::~TCompactProtocolT;operator delete 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::detail::MakeDictDecoder;parquet::AllocateBuffer;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::detail::MakeDictDecoder;parquet::AllocateBuffer;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager;arrow::CPUMemoryManager::Make;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;parquet::detail::MakeDictDecoder;parquet::AllocateBuffer;arrow::AllocateResizableBuffer;arrow::PoolBuffer::Resize 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;std::__detail::_Map_base<int, std::pair<int const, std::unique_ptr<parquet::TypedDecoder<parquet::PhysicalType<;std::_Hashtable<int, std::pair<int const, std::unique_ptr<parquet::TypedDecoder<parquet::PhysicalType<;std::__detail::_Prime_rehash_policy::_M_need_rehash 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::PoolBuffer::Resize;arrow::BaseMemoryPoolImpl<arrow::(anonymous namespace)::JemallocAllocator>::Reallocate;je_arrow_mallocx;imalloc;imalloc_body;imalloc_no_sample;ipalloct;ipallocztm;je_arrow_private_je_arena_palloc;je_arrow_private_je_large_malloc;je_arrow_private_je_large_palloc;je_arrow_private_je_arena_extent_alloc_large;je_arrow_private_je_extents_alloc;extent_recycle;extent_recycle_extract;extent_activate_locked;extents_remove_locked;je_arrow_private_je_extent_heap_remove 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::PlainDecoder<parquet::PhysicalType<;__memmove_avx_unaligned_erms 11
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::(anonymous namespace)::ColumnReaderImplBase<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::PlainByteArrayDecoder::~PlainByteArrayDecoder 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode 21
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;arrow::BitUtil::BitReader::GetBatch<short> 4
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;arrow::BitUtil::BitReader::GetBatch<short>;arrow::internal::unpack32;arrow::internal::unpack32_avx2 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;arrow::BitUtil::BitReader::GetBatch<short>;arrow::internal::unpack32;arrow::internal::unpack32_avx2;arrow::internal::(anonymous namespace)::UnpackBits256< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;arrow::util::RleDecoder::NextCounts<short> 4
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;parquet::internal::FindMinMax;parquet::internal::FindMinMaxAvx2 191
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;parquet::internal::FindMinMax;parquet::internal::FindMinMaxAvx2;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::LevelDecoder::Decode;parquet::internal::FindMinMax;parquet::internal::FindMinMaxAvx2;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense 62
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::ArrayBuilder::Reserve 29
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::ArrayBuilder::Reserve;arrow::ArrayBuilder::length 18
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append 16
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;__memmove_avx_unaligned_erms 3
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BaseBinaryBuilder<arrow::BinaryType>::Append;arrow::ArrayBuilder::length 6
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BufferBuilder::Append 20
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BufferBuilder::Append;__memcpy_avx_unaligned 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BufferBuilder::Append;__memmove_avx_unaligned_erms 16
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::BufferBuilder::Append;__memmove_avx_unaligned_erms;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::util::RleDecoder::GetBatch<int>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::ByteArrayChunkedRecordReader::ReadValuesSpaced;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrow;parquet::(anonymous namespace)::DictByteArrayDecoderImpl::DecodeArrowDense;arrow::util::RleDecoder::GetBatch<int>;arrow::util::RleDecoder::NextCounts<int> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::standard::DefLevelsToBitmapSimd<false> 24
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::standard::DefLevelsToBitmapSimd<false>;parquet::internal::GreaterThanBitmap 9
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::standard::DefLevelsToBitmapSimd<false>;parquet::internal::GreaterThanBitmap;parquet::internal::GreaterThanBitmapAvx2 133
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;__memset_avx2_unaligned_erms 7
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::internal::BitBlockCounter::NextFourWords 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float> 275
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;arrow::BitUtil::BitReader::GetBatch<int> 12
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2;arrow::internal::(anonymous namespace)::UnpackBits256< 44
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<float>;arrow::util::RleDecoder::NextCounts<int> 7
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<int> 25
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<int>;arrow::BitUtil::BitReader::GetBatch<int> 3
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<int>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<int>;arrow::util::RleDecoder::NextCounts<int> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<long> 68
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<long>;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<long>;arrow::BitUtil::BitReader::GetBatch<int> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FunctionIterator<arrow::dataset::ParquetScanTask::Execute;arrow::RecordBatchReader::Next;parquet::arrow::(anonymous namespace)::RowGroupRecordBatchReader::ReadNext;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> > >;arrow::FlattenIterator<std::shared_ptr<arrow::RecordBatch> >::Next;arrow::Iterator<arrow::Iterator<std::shared_ptr<arrow::RecordBatch> > >::Next<arrow::FunctionIterator<parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::LeafReader::LoadBatch;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;parquet::internal::(anonymous namespace)::TypedRecordReader<parquet::PhysicalType<;virtual thunk to parquet::(anonymous namespace)::DictDecoderImpl<parquet::PhysicalType<;arrow::util::RleDecoder::GetBatchWithDict<long>;arrow::BitUtil::BitReader::GetBatch<int>;arrow::internal::unpack32;arrow::internal::unpack32_avx2;arrow::internal::(anonymous namespace)::UnpackBits256< 6
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::RecordBatch::Make 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;_int_free 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::Result<arrow::Datum>::Result<arrow::Datum, void> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::Function::DispatchBest;arrow::compute::Function::DispatchExact;arrow::compute::detail::DispatchExactImpl 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::Function::DispatchBest;arrow::compute::Function::DispatchExact;arrow::compute::detail::DispatchExactImpl;std::vector<arrow::compute::VectorKernel const*, std::allocator<arrow::compute::VectorKernel const*> >::_M_realloc_insert<arrow::compute::VectorKernel const*>;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::PrimitiveTake 3
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::PrimitiveTake;arrow::compute::internal::(anonymous namespace)::PreallocateData;arrow::compute::KernelContext::Allocate;arrow::AllocateResizableBuffer;operator new;__GI___libc_malloc;_int_malloc;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::PrimitiveTake;arrow::compute::internal::(anonymous namespace)::PreallocateData;arrow::compute::KernelContext::AllocateBitmap;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager;arrow::CPUMemoryManager::Make;operator new;__GI___libc_malloc;tcache_get 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::PrimitiveTake;arrow::compute::internal::(anonymous namespace)::PreallocateData;arrow::compute::KernelContext::AllocateBitmap;arrow::AllocateResizableBuffer;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::TakeExec<arrow::compute::internal::(anonymous namespace)::VarBinaryImpl<arrow::BinaryType> > 3
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::TakeExec<arrow::compute::internal::(anonymous namespace)::VarBinaryImpl<arrow::BinaryType> >;__memmove_avx_unaligned_erms 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::TakeExec<arrow::compute::internal::(anonymous namespace)::VarBinaryImpl<arrow::BinaryType> >;arrow::BufferBuilder::Reserve;arrow::BufferBuilder::Resize;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager;arrow::CPUMemoryManager::Make;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::ExecuteBatch;arrow::compute::internal::(anonymous namespace)::TakeExec<arrow::compute::internal::(anonymous namespace)::VarBinaryImpl<arrow::BinaryType> >;arrow::internal::GetArrayView;arrow::(anonymous namespace)::ViewDataImpl::MakeDataView 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;arrow::compute::detail::(anonymous namespace)::VectorExecutor::Execute;std::vector<arrow::Datum, std::allocator<arrow::Datum> >::~vector;arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >::destroy 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::compute::CallFunction;arrow::compute::Function::Execute;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;arrow::compute::internal::(anonymous namespace)::TakeAA;arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >, arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >::copy_to<arrow::util::detail::explicit_copy_constructor::type<arrow::util::Variant<arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > > > >;std::__shared_ptr<arrow::ArrayData,  1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::Take;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::TakeMetaFunction::ExecuteImpl;operator delete@plt 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::internal::GetTakeIndices;arrow::compute::internal::(anonymous namespace)::GetTakeIndicesImpl<arrow::UInt32Type> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;arrow::compute::CallFunction;arrow::compute::MetaFunction::Execute;arrow::compute::internal::(anonymous namespace)::FilterMetaFunction::ExecuteImpl;arrow::compute::internal::GetTakeIndices;arrow::compute::internal::(anonymous namespace)::GetTakeIndicesImpl<arrow::UInt32Type>;arrow::internal::BaseSetBitRunReader<false>::NextRun 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::compute::Filter;std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string;__strlen_avx2 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::PrepareOutput;arrow::compute::(anonymous namespace)::AllocateDataBuffer;arrow::compute::KernelContext::AllocateBitmap;__memset_avx2_unaligned_erms 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;std::_Function_handler<void ;arrow::compute::internal::applicator::ScalarBinary<arrow::BooleanType, arrow::DoubleType, arrow::DoubleType, arrow::compute::internal::(anonymous namespace)::Greater>::Exec 8
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::PrepareOutput;arrow::compute::KernelContext::AllocateBitmap;__memset_avx2_unaligned_erms 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::detail::ExecBatchIterator::Next;arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >::move_to 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::CastFloatingToFloating;arrow::compute::internal::CastNumberImpl<arrow::FloatType>;arrow::compute::internal::DoStaticCast<double, float> 4
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::CastFloatingToFloating;arrow::compute::internal::CastNumberImpl<arrow::FloatType>;arrow::compute::internal::DoStaticCast<double, float>;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::CastFloatingToFloating;arrow::compute::internal::CastNumberImpl<arrow::FloatType>;arrow::compute::internal::DoStaticCast<double, float>;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;_int_free 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;arrow::dataset::FilterRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::util::Variant<arrow::Datum::Empty, std::shared_ptr<arrow::Scalar>, std::shared_ptr<arrow::ArrayData>, std::shared_ptr<arrow::ChunkedArray>, std::shared_ptr<arrow::RecordBatch>, std::shared_ptr<arrow::Table>, std::vector<arrow::Datum, std::allocator<arrow::Datum> > >::operator= 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::FilterRecordBatch;std::_Sp_counted_base<;arrow::SimpleRecordBatch::~SimpleRecordBatch 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::Datum::shape 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::RecordBatch::FromStructArray;arrow::schema;arrow::Schema::Schema;arrow::(anonymous namespace)::CreateNameToIndexMap;std::_Hashtable<std::string, std::pair<std::string const, int>, std::allocator<std::pair<std::string const, int> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_insert_multi_node;std::_Hashtable<std::string, std::pair<std::string const, int>, std::allocator<std::pair<std::string const, int> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_rehash_aux 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::Init;arrow::compute::OutputType::Resolve;std::_Function_handler<arrow::Result<arrow::ValueDescr> ;arrow::compute::internal::(anonymous namespace)::ProjectResolve 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::Init;arrow::compute::OutputType::Resolve;std::_Function_handler<arrow::Result<arrow::ValueDescr> ;arrow::compute::internal::(anonymous namespace)::ProjectResolve;arrow::field;operator new;__GI___libc_malloc;_int_malloc;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::KernelExecutorImpl<arrow::compute::ScalarKernel>::Init;arrow::compute::OutputType::Resolve;std::_Function_handler<arrow::Result<arrow::ValueDescr> ;arrow::compute::internal::(anonymous namespace)::ProjectResolve;arrow::struct_;arrow::(anonymous namespace)::CreateNameToIndexMap;std::_Hash_bytes 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::(anonymous namespace)::ProjectExec 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::(anonymous namespace)::ProjectExec;arrow::Datum::make_array;arrow::MakeArray;arrow::PrimitiveArray::SetData 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::compute::detail::(anonymous namespace)::ScalarExecutor::Execute;arrow::compute::internal::(anonymous namespace)::ProjectExec;arrow::Datum::make_array;arrow::MakeArray;operator new 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;arrow::FieldPath::Get 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;arrow::dataset::ExecuteScalarExpression;std::_Sp_counted_base< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;arrow::dataset::ProjectRecordBatch;arrow::dataset::ExecuteScalarExpression;std::vector<arrow::Datum, std::allocator<arrow::Datum> >::~vector;std::_Sp_counted_base< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::ToVector;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::begin;arrow::Iterator<std::shared_ptr<arrow::RecordBatch> >::Next<arrow::MapIterator<arrow::dataset::ProjectRecordBatch;std::_Sp_counted_base<;arrow::SimpleRecordBatch::~SimpleRecordBatch;std::_Sp_counted_ptr_inplace<arrow::ArrayData, std::allocator<arrow::ArrayData>, ;__GI___libc_free 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::ComputeColumnChunkRange;parquet::ColumnChunkMetaData::~ColumnChunkMetaData 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::PageReader::Open;parquet::AllocateBuffer;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager;arrow::CPUMemoryManager::Make 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::ReaderProperties::GetStream;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::ReadableFile>::ReadAt;arrow::io::OSFile::ReadAt;arrow::internal::FileReadAt;__libc_pread64;__libc_pread64;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::ReaderProperties::GetStream;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::ReadableFile>::ReadAt;arrow::io::OSFile::ReadAt;arrow::internal::FileReadAt;__libc_pread64;__libc_pread64;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 2
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::ReaderProperties::GetStream;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::ReadableFile>::ReadAt;arrow::io::OSFile::ReadAt;arrow::internal::FileReadAt;__libc_pread64;__libc_pread64;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 70
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::ReaderProperties::GetStream;arrow::io::internal::RandomAccessFileConcurrencyWrapper<arrow::io::ReadableFile>::ReadAt;arrow::io::OSFile::ReadAt;arrow::internal::FileReadAt;__libc_pread64;__libc_pread64;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::RowGroupReader::GetColumnPageReader;parquet::SerializedRowGroup::GetColumnPageReader;parquet::RowGroupMetaData::ColumnChunk 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::internal::RecordReader::Make 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::internal::RecordReader::Make;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::internal::RecordReader::Make;parquet::AllocateBuffer 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::internal::RecordReader::Make;parquet::AllocateBuffer;arrow::AllocateResizableBuffer;arrow::CPUDevice::memory_manager;arrow::CPUMemoryManager::Make;operator new;__GI___libc_malloc;_int_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;parquet::internal::RecordReader::Make;parquet::AllocateBuffer;std::__shared_count<;operator new;__GI___libc_malloc 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::ParquetScanTask::Execute;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetRecordBatchReader;parquet::arrow::(anonymous namespace)::FileReaderImpl::GetFieldReaders;parquet::arrow::(anonymous namespace)::GetReader;std::_Function_handler<parquet::arrow::FileColumnIterator* ;parquet::ParquetFileReader::metadata 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::SimplifyWithGuarantee;arrow::dataset::ReplaceFieldsWithKnownValues;arrow::dataset::Modify<arrow::dataset::ReplaceFieldsWithKnownValues;arrow::dataset::Modify<arrow::dataset::ReplaceFieldsWithKnownValues;arrow::FieldRef::hash;std::_Hash_bytes 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::SimplifyWithGuarantee;arrow::dataset::ReplaceFieldsWithKnownValues;arrow::dataset::Modify<arrow::dataset::ReplaceFieldsWithKnownValues;arrow::dataset::Modify<arrow::dataset::ReplaceFieldsWithKnownValues;arrow::Result<arrow::dataset::Expression>::Result<arrow::dataset::Expression, void> 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;arrow::dataset::FilterAndProjectScanTask::Execute;arrow::dataset::SimplifyWithGuarantee;arrow::dataset::SimplifyWithGuarantee;arrow::dataset::Canonicalize;arrow::default_memory_pool;arrow::(anonymous namespace)::DefaultBackend 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;std::_Sp_counted_base< 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;arrow::internal::FnOnce<void ;arrow::internal::FnOnce<arrow::Status ;std::vector<std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch> > >, std::allocator<std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch> > > > >::_M_default_append;operator new;__GI___libc_malloc;_int_malloc;malloc_consolidate 1
conbench;__GI___clone;start_thread;execute_native_thread_routine;std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked;pthread_mutex_lock 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyGC_Collect;[python3.8];[python3.8];[python3.8];[python3.8] 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyGC_Collect;[python3.8];[python3.8];[python3.8];__pyx_tp_dealloc_7pyarrow_8_dataset_Dataset;arrow::dataset::FileSystemDataset::~FileSystemDataset;arrow::dataset::ParquetFileFragment::~ParquetFileFragment;std::_Sp_counted_ptr<parquet::FileMetaData*, ;parquet::format::FileMetaData::~FileMetaData;std::vector<parquet::format::RowGroup, std::allocator<parquet::format::RowGroup> >::~vector;_int_free 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyImport_Cleanup;_PyGC_CollectNoFail;[python3.8] 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyImport_Cleanup;_PyGC_CollectNoFail;[python3.8];[python3.8] 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyImport_Cleanup;_PyGC_CollectNoFail;[python3.8];[python3.8];[python3.8] 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyImport_Cleanup;_PyGC_CollectNoFail;[python3.8];[python3.8];[python3.8];[python3.8] 1
conbench;_start;__libc_start_main;Py_BytesMain;Py_RunMain;PyRun_SimpleFileExFlags;PyErr_PrintEx;[python3.8];Py_Exit;Py_FinalizeEx;PyImport_Cleanup;_PyModule_ClearDict;[python3.8] 1
jemalloc_bg_thd;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 5
jemalloc_bg_thd;__GI___clone;start_thread;background_thread_entry;background_work;background_work_sleep_once;background_thread_sleep;__pthread_cond_timedwait;__pthread_cond_wait_common;futex_abstimed_wait_cancelable;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 4
jemalloc_bg_thd;__GI___clone;start_thread;background_thread_entry;background_work;background_work_sleep_once;background_thread_sleep;__pthread_cond_timedwait;__pthread_cond_wait_common;futex_abstimed_wait_cancelable;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
jemalloc_bg_thd;__GI___clone;start_thread;background_thread_entry;background_work;background_work_sleep_once;je_arrow_private_je_arena_decay;arena_decay_dirty;arena_decay_impl;arena_maybe_decay;arena_maybe_decay;arena_decay_try_purge;arena_decay_try_purge;arena_decay_to_limit;arena_decay_stashed;je_arrow_private_je_extent_purge_lazy_wrapper;extent_purge_lazy_impl;je_arrow_private_je_pages_purge_lazy;je_arrow_private_je_pages_purge_lazy;__GI_madvise;[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]];[[kernel.kallsyms]] 1
